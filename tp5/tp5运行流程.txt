1、流程：
    1）总体流程：
        （1）定义系统常量->注册自动加载->注册错误和异常处理机制->加载惯例配置文件->执行应用程序->发送数据到客户端
    2）详细流程说明
        （1）注册自动加载
                一、注册命名空间
                二、自动加载类 
         (2)注册错误和异常处理机制
                一、自定义错误类 set_error_handler([__CLASS__, 'appError']);只要错误级别不是E_ERROR、E_PARSE这些致命错误、语法错误，就会触发
                二、自定义异常类 set_exception_handler([__CLASS__, 'appException']);只要抛出（throw）异常就会触发
                三、register_shutdown_function([__CLASS__, 'appShutdown']);程序执行完成就触发
        （3）执行应用程序
                一、初始化应用，
                        （一）加载配置文件（application或模块下config.php、database.php）（就是config类属性赋值）
                        （二）加载扩展配置文件（application或模块下extra目录下的文件）（就是config类属性赋值）
                        （三）加载行为扩展文件（application或模块下tags.php）（就是注册行为）
                        （四）加载公共文件（application或模块下common.php）（include引入）
                        （五）加载模块语言包（模块下lang文件夹下的文件）（相当于给语言类属性赋值）
			（六）注册应用命名空间（config.php中'app_namespace'=>'app',就是application用app代替） 		
			（七）加载额外文件（config.php中的extra_file_list=>APP_PATH . 'helper' . EXT, THINK_PATH . 'helper' . EXT）(就是include 引入助手函数文件)
		二、入口文件绑定、加载系统语言包
			（一）、常量定义（就是模块邦定，入口文件添加BIND_MODULE常量，即可把当前入口文件绑定到指定的模块或者控制器)
			（二）、自动入口绑定（根据入口文件名定位对应的模块，如：假设入口文件是demo.php,则访问时就去找demo模块）
			（三）、开启多语言机制 检测当前语言
			（四）、加载系统语言包(应用和thinkphp文件夹下lang文件夹下的(zh-cn.php)文件)
		三、路由
			（一）邦定
				[一]、先进行路由检测，如果有开启路由，则导入路由配置文件进行路由注册（这里指静态配置定义注册，还有一种是动态注册。）
				[二]、动态注册（get、post、controller等）
			（二）解析
				[一]、路由别名解析
				[二]、域名路由解析
				[三]、规则路由解析（包括静态注册、动态注册）
		四、


