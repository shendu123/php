1、行为
2、路由（域名邦定模块）
3、控制器
	1）分层控制器：
		（1）不在默认Controller目录，在指定的控制器目录。如：\think\Loader::controller('Blog', 'event');在event目录下的Blog控制器
5、反射  
	1)定义：
		（1）、https://www.cnblogs.com/KeenLeung/p/6041280.html
		（2）、PHP Reflection API详解:http://www.jb51.net/article/65897.htm
		（3）、它是指在PHP运行状态中，扩展分析PHP程序，导出或提取出关于类、方法、属性、参数等的详细信息，包括注释。这种动态获取的信息以及动态调用对象的方法的功能称为反射API。
			PHP反射api由若干类组成，可帮助我们用来访问程序的元数据或者同相关的注释交互。借助反射我们可以获取诸如类实现了那些方法，创建一个类的实例（不同于用new创建），调用一个方法（也不同于常规调用），传递参数，动态调用类的静态方法
	2) 反射类
		（1）ReflectionClass类
			一、getConstructor方法：取得该类的构造函数信息
			二、newInstanceArgs方法：实例化该类
		（2）ReflectionMethod类		
			一、getNumberOfParameters方法：获取控制器构造函数参数个数或请求方法参数个数
			二、getParameters方法：获取控制器构造函数参数或请求方法参数（返回ReflectionParameter对象）
			三、invoke方法：调用该方法
			四、isPublic方法：测试该方法是否为public
			五、isStatic方法：测试该方法是否为static
		（3）ReflectionParameter类
			一、getName方法：取得参数名
			二、getClass方法：若该参数为对象，返回该对象的类名
	3）邦定参数、依赖注入

6、模型
	1）分层模型：
		（1）不在默认Model目录，在指定的模型目录。如：\think\Loader::model('User', 'logic');在logic目录下的User类
	
7、验证
	1）$rule instanceof \Closure判断规则函数是否为匿名函数
	2）内置函数：
		（1）call_user_func	调用类内部的方法，并传参数。
			一、如：call_user_func(array("a", "b"),"111"); 调用a类的b方法，参数为111
		（2）call_user_func_array			
			一、调用函数,并传参数：call_user_func_array('a', array("111", "222")); 调用a函数，第一个参数为111,第二个参数为222
			二、调用类内部的方法，并传参数。call_user_func_array(array('ClassA','b'), array("111", "222")); 
8、错误异常与调式
	1）错误级别：
		（1）Notice 通知级别的错误 如直接使用未声明变量，程序继续执行
　		（2）Warning 警告级别的错误，可能得不到想要的结果
　		（3）Fatal error  致命级别错误致命级别错误，程序不往下执行
　		（4）parse error 语法解析错误，最高级别错误，连其他错误信息也不呈现出来
		（5）补充说明：
			一、http://blog.csdn.net/zhang197093/article/details/75094816
			二、http://blog.sina.com.cn/s/blog_558839ae0100es0u.html
			三、php的错误分成了很多的级别，如E_ERROR、E_WARNING、E_PARSE、E_NOTICE等等，对于像E_ERROR、E_PARSE这样的严重错误不能被用户自定义处理，php会直接终止脚本的运行。
	2）php错误异常处理内置函数
		（1）set_error_handler
			一、定义：设置用户自定义的错误处理函数。 该函数用于创建运行时期间的用户自己的错误处理方法，用来捕捉错误级别为Warning或Notice的错误，E_ERROR、E_PARSE级别的错误无法捕捉
			二、用法：
				（一）、不仅可以接受函数，还可以接受 类的方法（公开的静态方法 及 公开的非静态方法 都可以），但需要以 数组形式 传递，数组的第一值为“类名”，第二个参数为“方法名
				（二）、例：set_error_handler（'func'）或set_error_handler（['classA','method']）
			三、提示：如果使用了该函数，会完全绕过标准的 PHP 错误处理函数，			
		（2）set_exception_handler
			一、定义：设置用户自定义的异常处理函数,只要有异常抛出（throw new Exception），就会被触发
			二、用法：同上
		（3）register_shutdown_function
			一、定义：PHP程序执行完成后执行的函数，原理就是在PHP进程结束前会去调用它一次（在页面的最后）
			二、触发情况分为以下几种使用场景：
				（一）、php代码执行过程中发生错误（异常或错误），成功、die、exit等（调试时会看到在die后有输出）
				（二）、php代码运行超时
				（三）、页面被（用户）强制停止
	3）ErrorException与HttpException
		(1)ErrorException会记录日志，HttpException只渲染异常模板（tpAdmin-master/thinkphp/tpl/think_exception.tpl）
	4）调式：
		（1）性能调式：调试某段代码的运行时间（单位s）或者内存占用开销(单位kb)
			一、debug('begin'); ...代码段；debug('end');   echo debug('begin','end').'s';   echo debug('begin','end').'kb';	
9、配置：
	1）环境变量中的配置优先于项目应用的配置文件


