1、商品	（后台添加商品:选择分类与类型，类型又包含属性与规格）
   	1）属性:如：手机：操作系统、屏幕材质、尺寸、通话时长、待机时间
   	2）规格：一个规格具有多个规格值，拿手机举例，如：网络（4G手机、3G手机）、内存（16G、64G）
   	3）属性与规格区别：规格影响价格，属性与价格无关 
   	4）spu与sku区别：就好比苹果6s有两个不同的内存（16G、64G），16G与64G是两个不同的sku,苹果6s是一个spu
 5）后台添加商品注意的地方：
		（1）添加商品时，同时往“商品规格价格库存表（tp_spec_goods_price）”插入数据：里面记录了不同规格对应的价格与库存
一、一个类型可以有多个规格与属性，类型关联规格表与属性表，规格关联规格值表。属性表关联属性值表。
二、一个类型可以有多个规格（名），一个规格名可以有多个规格值。
一）如：手机可以有内存与颜色两个规格名，内存可以有32G、64G两个规格值 。
二）tp_spec_goods_price 表中key表示规格值id，如：28_55（32G 黑色）

		（2）商品库存：商品不同规格库存的总和
		（3）商品相册与规格图片是不一样的，商品相册表关联的是商品id，商品规格图片表关联的是规格值id
6）、商品相关表（8张表）
（1）商品表、分类表、商品类型表，商品属性表，商品属性值表，商品规格表，商品规格值表、商品规格价格库存表
2、购物车
1）未登录加入购物车：未登录时通过往cart表中插入sessionid来标识是哪个用户加入的购物车，当此用户登录后，根据cart表中的sessionid，把cart表中的用户id改为登录的用户id
2）购物车实现：
		（1）、获取商品详情页表单中的数据，ajax序列化提交到ajaxAddCart进行处理，如goods_id,goods_num,选中的规格（以键为规格名，值为规格值id的数组）如：
			<input type="radio"  rel="16G" name="goods_spec[内存]" value="13" checked="checked">
		（2）对于提交上来的数据，购物车这边先判断商品类型是普通商品还是促销活动商品（如：秒杀、团购），不同类型不同处理
		（3）把提交上来的的规格数组进行排序（sort），然后用_拼接，去“商品规格价格库存表”查询对应的规格价格
		（4）去购物车中查询相同的规格商品是否存在，如果存在就修改商品数量，否则就添加
3、订单
1）订单提交，清空购物车
4、库存  
 	1）何时减库存
		（1）下单时减库存，但会出现恶拍的情况（亲买家，就是故意下单不付款，导致卖家商品库存急剧减少，导致有意向的买家无法购买商品）
		（2）付款成功减库存，但会出现超卖（亲卖家，因第三方支付返回结果存在时差，则当同一时间多个买家同时购买商品并付款成功，会导致下单数目超过库存，卖家库存不足容易引发断货和投诉，成本增加；）
		（3）恶拍解决方案
			一、买家可设置［库存保留时间］，当买家拍下商品但n分钟不付款，则自动取消该订单，既给了拍下的买家考虑的时间，又给了其他真实买家机会
			二、限购：用各种条件来限制买家的购买件数，比如一个账号、一个ip，只能买一件，这样恶拍的成本就被大大提高
		（4）超卖解决方案
			一、尽可能晚地验证该商品是否有库存，比如第一个用户付款成功了但返回支付结果有延迟，第二个用户等到确认订单要付款时再检查一下库存，这个时候支付结果已经返回，库存已经减少
5、支付
1）微信公众号支付开发步骤。
（1）设置支付目录：https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_3
一、在微信商户平台（pay.weixin.qq.com）设置您的公众号支付支付目录
（2）设置网页授权域名
一、开发公众号支付时，在统一下单接口中要求必传用户openid，而获取openid则需要您在公众平台设置获取openid的域名，只有被设置过的域名才是一个有效的获取openid的域名，否则将获取失败
（3）获取用户授权，得到用户信息（网页授权，获取用户信息）
一、用户授权并获取code
二、通过code获取access_token、openid
三、通过access_token、openid获取用户信息
（4）调用统一下单接口获取预支付id
（5）H5调起微信支付的内置JS
（6）支付完成后，微信回调URL的处理
2）微信扫码支付开发步骤
（1）、生成支付二维码
一、、先在后台进行微信支付配置（APPID、商户号、商户支付密钥等）
二、前台确认选择微信支付后，调用统一下单接口，设置订单数据、微信支付配置文件数据转换为xml
三、、curl以post方式提交xml到对应的接口，然后把返回的xml接口数据转换为数组，获取地址生成二维码
（2）、扫二维码支付
一、扫码支付完后，跳转到回调地址（根据返回的支付结果通知，处理订单状态等业务逻辑）
二、微信返回支付结果通知：WxpayApi::notify（）获取返回结果，如果有数据（如：商家appid、订单号、订单金额），则支付成功  https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_7
三、改变订单状态：微信支付PayNotifyCallBack类继承WxPayNotify类，重写回调处理函数NotifyProcess。（支付成功或失败后的业务逻辑都在此函数里面处理）
3）、微信扫码支付与公众号支付区别：
（1）公众号支付需要openid（所以只能在微信浏览器里），扫码支付可以在pc网站

6、秒杀、团购业务逻辑
     	1）抢购表设计(重要字段)：id、参加抢购的商品id、抢购价格、参加抢购的商品数量、每人限购数、开始时间、结束时间 、是否结束is_end
     	2）商品表添加两个字段：优惠活动id、优惠活动类型type（如:1为秒杀、2为团购、3为优惠促销）
     	3）如有设置商品活动，则商品详情页优先显示活动信息（如：抢购标题、抢购价、剩余时间），否则显示普通商品信息（如:价格）
     	4）不能参与抢购的情况：购买数量大于每人限购数、活动时间已结束

7、积分商城 
      	1）后台全局设置积分换算比例（point_rate）。如：1元 = 1积分       1元 = 10积分       1元 = 100积分
      	2）后台添加商品时，根据商品价来赠送积分（根据不同商品后台设置，exchange_integral）	
      	3）算法：$goods['shop_price']-（$goods['exchange_integral']/$point_rate）+$goods['exchange_integral']	
















