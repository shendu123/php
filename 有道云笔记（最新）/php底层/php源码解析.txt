1、php底层
	1）、php是一个用C语言实现包含大量组件的软件框架
	2）、三个模块：
		（1）内核：用来处理请求、文件流、错误处理等相关操作
		（2）Zend引擎（ZE）：用以将源文件转换成机器语言，然后在虚拟机上运行它	
		（3）扩展层：是一组函数、类库和流，PHP使用它们来执行一些特定的操作。比如，我们需要MySQL扩展来连接MySQL数据库； 
	3）、工作流程：当ZE执行程序时可能会需要连接若干扩展，这时ZE将控制权交给扩展，等处理完特定任务后再返还；最后，ZE将程序运行结果返回给PHP内核，它再将结果传送给SAPI层，最终输出到浏览器上。
	4）、四层体系：
		（1）Zend引擎：Zend整体用纯C实现，是PHP的内核部分，它将PHP代码翻译（词法、语法解析等一系列编译过程）为可执行opcode的处理并实现相应的处理方法、实现了基本的数据结构（如hashtable、oo）、内存分配及管理、提供了相应的api方法供外部调用，是一切的核心，所有的外围功能均围绕Zend实现。
		（2）Extensions：围绕着Zend引擎，extensions通过组件式的方式提供各种基础服务，我们常见的各种内置函数（如array系列）、标准库等都是通过extension来实现，用户也可以根据需要实现自己的extension以达到功能扩展、性能优化等目的（如贴吧正在使用的PHP中间层、富文本解析就是extension的典型应用）。
		（3）Sapi：Sapi全称是Server Application Programming Interface，也就是服务端应用编程接口，Sapi通过一系列钩子函数，使得PHP可以和外围交互数据，这是PHP非常优雅和成功的一个设计，通过sapi成功的将PHP本身和上层应用解耦隔离，PHP可以不再考虑如何针对不同应用进行兼容，而应用本身也可以针对自己的特点实现不同的处理方式。
		（4）上层应用：这就是我们平时编写的PHP程序，通过不同的sapi方式得到各种各样的应用模式，如通过webserver实现web应用、在命令行下以脚本方式运行等等。
	5）、常见sapi：
		（1）apache2handler：也就是mod_php5.so模块，这是以apache作为webserver，采用mod_PHP模式运行时候的处理方式，也是现在应用最广泛的一种。（简单说就是mod_php5.so作为apache的一个模块来解析php）
		（2）cgi：这是webserver和PHP直接的另一种交互方式，也就是cgi协议，在最近几年fastcgi+PHP得到越来越多的应用，也是异步webserver所唯一支持的方式。
		（3) cli：命令行调用的应用模式
6）、各sapi区别
（1）php的几种运行模式CLI、CGI、FastCGI、mod_php区别：http://www.cnblogs.com/orlion/p/5282753.html
（2）PHP的两种方式CGI和mod_php的比较：http://blog.csdn.net/ljyf5593/article/details/7548687
7）、php底层运行机制与原理：
（1）http://blog.jobbole.com/94475/	
（2）http://blog.csdn.net/luyaran/article/details/53114981
8）、php内核：
（1）php内核分析：http://blog.csdn.net/u010852544/article/details/44198029
（2）深入理解php内核：
一、http://www.php-internals.com/book/?p=chapt02/02-00-overview
二、https://www.kancloud.cn/kancloud/php-internals/42747
9）、opcode：
（1）zend引擎把php代码编译为opcode
（2）深入理解PHP之OpCode原理详解：http://www.jb51.net/article/85557.htm
（3）PHP缓存之Opcode缓存：https://segmentfault.com/a/1190000008339963